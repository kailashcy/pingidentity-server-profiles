
# Ref: https://dlmade.medium.com/ci-cd-with-github-action-and-aws-eks-5fd9714010cd
name: Deploy PF to GKE
on:
  push:
    tags: pf-v**

env:
  # Set the base image repository and tag
  BASE_IMAGE_REPOSITORY: registry.hub.docker.com/pingidentity
  BASE_IMAGE_TAG: 2411-12.1.4
  PRODUCT: pingfederate
  # Set the target ECR repository, registry, EKS cluster name, and AWS region
  ECR_REPOSITORY: pingfederate
  ECR_REGISTRY: 528446573583.dkr.ecr.us-east-1.amazonaws.com
  EKS_CLUSTER_NAME: pingdevops-cluster 
  AWS_REGION: us-east-1
  #
  STUDENT_NAMESPACE: "pingdevops-namespace-b"
  
  

jobs:
  
  build:
    
    name: build and deploy PingFederate to EKS
    runs-on: ubuntu-latest

    steps:

    - name: Set env
      id: vars
      run: echo "RELEASE_TAG=${GITHUB_REF#refs/*/}-${BASE_IMAGE_TAG}" >> $GITHUB_ENV

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{env.AWS_REGION}}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      run: |
        docker build \
        --build-arg BASE_IMAGE_REPOSITORY=$BASE_IMAGE_REPOSITORY \
        --build-arg PRODUCT=$PRODUCT \
        --build-arg BASE_IMAGE_TAG=$BASE_IMAGE_TAG \
        -t $ECR_REGISTRY/$ECR_REPOSITORY:$RELEASE_TAG \
        -f baseline/pingfederate/Dockerfile .
        echo "image build completed"
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$RELEASE_TAG
        echo  "image push completed"


    - name: Update kube config
      run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION
    # Ref: https://github.com/marketplace/actions/deploy-helm-chart-to-aws-eks-cluster

    - name: Deploy Helm
      run: |

        curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
        sudo apt-get install apt-transport-https --yes
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
        sudo apt-get update
        sudo apt-get install helm
        sleep 5s
        echo "Helm installed"
        helm repo add pingidentity https://helm.pingidentity.com/ 
        helm repo update 

        helm upgrade --install pingfederate-release pingidentity/ping-devops \
        --set global.envs.PING_IDENTITY_ACCEPT_EULA=YES \
        --set pingfederate-admin.image.tag=$RELEASE_TAG \
        --set pingfederate-engine.image.tag=$RELEASE_TAG \
        --set pingfederate-admin.image.repositoryFqn=$ECR_REGISTRY/$ECR_REPOSITORY \
        --set pingfederate-engine.image.repositoryFqn=$ECR_REGISTRY/$ECR_REPOSITORY \
        --version 0.10.0 \
        --namespace=$STUDENT_NAMESPACE \
        -f baseline/pingfederate/values.yaml


